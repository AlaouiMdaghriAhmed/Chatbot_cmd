# -*- coding: utf-8 -*-
"""Depression_chatbot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ddnth1Mk7jeXNf0xQOslTkP4tW76YO_s
"""


import nltk
nltk.download('vader_lexicon')


from nltk.sentiment.vader import SentimentIntensityAnalyzer
import random
import questionary
import  webbrowser


'''analysis = TextBlob("Its so hard to talk when you want to kill yourself. That's above and beyond everything else, and it's not a mental complaint-it's a physical thing, like it's physically hard to open your mouth and make the words come out. They don't come out smooth and in conjunction with your brain the way normal people's words do; they come out in chunks as if from a crushed-ice dispenser; you stumble on them as they gather behind your lower lip. So you just keep quiet.")

polarity = analysis.sentiment.polarity

subjetivity=analysis.sentiment.subjectivity

polarity

subjetivity

from nltk.sentiment.vader import SentimentIntensityAnalyzer

score = SentimentIntensityAnalyzer().polarity_scores("i don't want your help")

score'''



def welcome():
    """This function will return greetings"""
    greetings = [
        'Hi,',
        'Hello,',
        'Good day,',
        'Hola,',
        'Howdy,',
    ]

    inquires = [
        "How's it going?",
        "How are you doing?",
        "How are you feeling today?",
        "How are you feeling?",
        "How are you?",
        "How are you doing today?",
        "How is your day going?",
        "How have you been?",
        "How have you been feeling?",
        "How have you been today?",
        "How have you been feeling today?"
    ]

    welcome = ((random.choice(greetings)) + " " + (random.choice(inquires)))

    print(welcome)
def ideas():

    """This is the function that generates the idea for mood improvement"""

    ideas = [
        "Go for a walk.",
        "Complete one chore.",
        "Play your favorite video game.",
        "Play with your pet.",
        "Watch a movie.",
        "Look at pictures from your last vacation.",
        "Put on a fancy outfit.",
        "Go thrifting.",
        "Work on your hobby.",
        "Go to the gym.",
        "Exercise.",
        "Do 10 push-ups.",
        "Cook a delicious meal.",
        "Go window shopping.",
        "Do some Yoga.",
        "Repair something around your house.",
        "Go for a bike ride.",
        "Doodle.",
        "Paint a picture.",
        "Call a friend and hang out.",
        "Go to your favorite coffee shop.",
        "Go for a scenic drive.",
        "Get a new haircut.",
        "Listen to your favorite music.",
        "Go fishing.",
        "Gaze at the stars.",
        "Meditate.",
        "Vist a museum.",
        "Watch a video of baby pugs.",
        "Do a puzzle.",
        "Re-arrange the furniture in a room in your house.",
        "Clean your house.",
        "Do laundry.",
        "Make a to-do list for this week.",
        "Prep your lunch for tomorrow.",
        "Look in a mirror and tell yourself that you are awesome.",
    ]

    return random.choice(ideas)


welcome()

score = SentimentIntensityAnalyzer().polarity_scores(input())
score.get('compound')

def sentiment_pop(s):
  if s<0:
    return 'negative'
  elif s==0:
    return 'neutral'
  else:
    return 'positive'

print("Your overall sentiment is : " + sentiment_pop(score.get("compound")))

def condolences():
    
    condolences = [
        "I'm sorry to hear that.",
        "I'm sorry you aren't feeling good.",
        "I'm so sorry you feel like that.",
        "I'm sorry, it's going to get better.",
        "Well that's not ideal.",
        "That's too bad",
        "Your emotions are important during this time, and Iâ€™m happy to help you shoulder them.",
        "I promise it gets better. ",
        "I'm sorry, but I am here for you."
    ]
    print(random.choice(condolences))

def user_feels_good():
    """This function is triggered if the PositiveFeeling intent is detected. """
    congrats = [
        'That is so good to hear!',
        'I am happy you feel good today',
        'I am glad to hear that.',
        'Oh happy day!',
        'Awesome.',
        'Good to hear!',
        'Wonderful!',
        'Great!',
        'I am so happy about that!',
        'That is so great!'
    ]
    return random.choice(congrats)

'''def check_sentiment(s):
    score = SentimentIntensityAnalyzer().polarity_scores(user_input())
    a=input("Your overall sentiment is : " + sentiment_pop(score.get("compound"))+ "? (Y/N)")
    if a.lower()=='y':
        return sentiment_pop(score.get("compound"))
    elif a.lower()=='n':
        return input("What is your overall sentiment ? (Positive/neutral/negative)").lower()'''





def prompt_user():


  return questionary.select(
    "How would you like to go about it?",
    choices=[
        'Talk to a pshychologist',
        'Ideas for mood improvement',
        'Answer some questions',
        'Exit'
    ]).ask()  # returns value of selection
def action():
    return random.choice([
                'Awesome.',
                'Good to hear!',
                'Wonderful!',
                'Great!',
    ])

def not_action():

    return random.choice([
        "That's too bad.",
        "That's okay, we all have days like that.",
        "I'm sorry. ",
        "That's too bad",
        "It's okay."
    ])



def basic_interaction():
        count=0
        if prompt_user()=='Talk to a pshychologist':
            webbrowser.open("https://www.google.com/maps/search/"+input('Where do you live: ')+"+psychologue")  # Go to maps and show therapists in your city
            if input("Can i help you in any other way ?(Y/N)").lower()=="y":
                basic_interaction()
            else:
                print("Have a good day. I hope to hear from you soon.")
                exit()
        elif prompt_user()== 'Ideas for mood improvement':
            print(ideas())
            if input("Can i help you in any other way ?(Y/N)").lower()=="y":
                basic_interaction()
                print("Have a good day. I hope to hear from you soon.")

            else: exit()
        elif prompt_user()=='Answer some questions':
            if questionary.select("Did you get out of bed today ? ",choices=['Yes','No']).ask().lower() == 'yes':
                print(action())
                
            else :
                count+=1
                print(not_action())
                print("Okay, well let's start by getting out of bed. You can do it!")
            if questionary.select("Have you eaten today?",choices=['Yes','No']).ask().lower() == 'yes':
                print(action())
            else :
                count+=1
                print(not_action())
                print("That's okay, but you should try to eat. You got this!")
            if questionary.select("Have you showered today?",choices=['Yes','No']).ask().lower() == 'yes':
                print(action())
            else :
                count+=1
                print(not_action())
                print( "Hmmm. Maybe you should take a nice, hot shower. It will help you feel better.")
           
            if questionary.select( "Have you gotten dressed?",choices=['Yes','No']).ask().lower() == 'yes':
                print(action())
            else :
                count+=1
                print(not_action())
                print("Alright. Well let's try getting dressed. You can do it!")
            if questionary.select("Have you gone outside at all today?",choices=['Yes','No']).ask().lower() == 'yes':
                print(action())
            else :
                count+=1
                print(not_action())
                print("Well let's try going outside. It might elate you. ")
            if (count == 0 )& (sentiment_pop(score.get("compound"))=='negative'):
                print("Good job doing all those things. When you're depressed, those little things can be the most difficult")
                basic_interaction()
            elif count > 3 :
                print("You should get to it most of that can help better you mood.")
                webbrowser.open("https://www.google.com/maps/search/"+input('Where do you live: ')+"+psychologue")  # Go to maps and show therapists in your city
                
                basic_interaction()

        elif prompt_user()== 'Exit' :
            if input("Are you sure?(Y/N)").lower()=="n":
                basic_interaction()
            else:
                print("Goodbye.")
                exit()

if sentiment_pop(score.get("compound"))=='negative':
    condolences()
    basic_interaction()
else :
    print(user_feels_good())
    basic_interaction()
